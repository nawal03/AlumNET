CREATE OR REPLACE PROCEDURE ADD_CO_CURRICULAR(
    CC_GROUP_ID IN  CO_CURRICULARS.GROUP_ID%TYPE,
    CC_EVENT_NAME IN CO_CURRICULARS.EVENT_NAME%TYPE,
    CC_EVENT_DATE IN VARCHAR2,
    CC_COVER_PHOTO IN CO_CURRICULARS.COVER_PHOTO%TYPE,
    CC_DESCRIPTION IN  CO_CURRICULARS.DESCRIPTION%TYPE,
    CC_LATITUDE IN  CO_CURRICULARS.LATITUDE%TYPE,
    CC_LONGITUDE IN  CO_CURRICULARS.LONGITUDE%TYPE,
    CC_PLATFORM IN  CO_CURRICULARS.PLATFORM%TYPE,
    CC_FEES IN  CO_CURRICULARS.FEES%TYPE,
    CC_AVAILABLE_FOR IN  CO_CURRICULARS.AVAILABLE_FOR%TYPE,
    RESULT OUT VARCHAR2
) IS
    CC_EVENT_ID EVENTS.EVENT_ID%TYPE;
BEGIN
    CC_EVENT_ID := EVENT_SEQ.NEXTVAL;
    INSERT INTO
        EVENTS(EVENT_ID, EVENT_TYPE)
    VALUES (CC_EVENT_ID, 'co_curricular');

    INSERT INTO CO_CURRICULARS(EVENT_ID, EVENT_NAME, EVENT_DATE, COVER_PHOTO, DESCRIPTION, LATITUDE, LONGITUDE, PLATFORM, FEES, AVAILABLE_FOR, GROUP_ID, TIMESTAMP)
    VALUES (CC_EVENT_ID, CC_EVENT_NAME, TO_DATE(CC_EVENT_DATE,'YYYY-MM-DD'), CC_COVER_PHOTO, CC_DESCRIPTION, CC_LATITUDE, CC_LONGITUDE, CC_PLATFORM, CC_FEES,
                CC_AVAILABLE_FOR, CC_GROUP_ID, systimestamp);
    RESULT := 'Co-curricular event is added';

EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;



CREATE OR REPLACE PROCEDURE UPDATE_CO_CURRICULAR(
    CC_EVENT_ID IN CO_CURRICULARS.EVENT_ID%TYPE,
    CC_EVENT_NAME IN CO_CURRICULARS.EVENT_NAME%TYPE,
    CC_EVENT_DATE IN VARCHAR2,
    CC_COVER_PHOTO IN CO_CURRICULARS.COVER_PHOTO%TYPE,
    CC_DESCRIPTION IN  CO_CURRICULARS.DESCRIPTION%TYPE,
    CC_LATITUDE IN  CO_CURRICULARS.LATITUDE%TYPE,
    CC_LONGITUDE IN  CO_CURRICULARS.LONGITUDE%TYPE,
    CC_PLATFORM IN  CO_CURRICULARS.PLATFORM%TYPE,
    CC_FEES IN  CO_CURRICULARS.FEES%TYPE,
    CC_AVAILABLE_FOR IN  CO_CURRICULARS.AVAILABLE_FOR%TYPE,
    RESULT OUT VARCHAR2
) IS
BEGIN
    UPDATE CO_CURRICULARS
        SET
            EVENT_NAME = CC_EVENT_NAME,
            EVENT_DATE = TO_DATE(CC_EVENT_DATE, 'YYYY-MM-DD'),
            COVER_PHOTO = CC_COVER_PHOTO,
            DESCRIPTION = CC_DESCRIPTION,
            LATITUDE = CC_LATITUDE,
            LONGITUDE = CC_LONGITUDE,
            PLATFORM = CC_PLATFORM,
            FEES = CC_FEES,
            AVAILABLE_FOR = CC_AVAILABLE_FOR
    WHERE EVENT_ID = CC_EVENT_ID;
    RESULT := 'Update is successful';
EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;
---------------------------------------

        -----REUNIONS-----

----------------------------------------
CREATE OR REPLACE PROCEDURE ADD_REUNION(
    R_GROUP_ID IN  REUNIONS.GROUP_ID%TYPE,
    R_EVENT_NAME IN REUNIONS.EVENT_NAME%TYPE,
    R_EVENT_DATE IN VARCHAR2,
    R_COVER_PHOTO IN REUNIONS.COVER_PHOTO%TYPE,
    R_DESCRIPTION IN  REUNIONS.DESCRIPTION%TYPE,
    R_LATITUDE IN  REUNIONS.LATITUDE%TYPE,
    R_LONGITUDE IN  REUNIONS.LONGITUDE%TYPE,
    R_PLATFORM IN  REUNIONS.PLATFORM%TYPE,
    R_FEES IN  REUNIONS.FEES%TYPE,
    R_BATCH IN  REUNIONS.BATCH%TYPE,
    R_DEPARTMENT IN  REUNIONS.DEPARTMENT%TYPE,
    RESULT OUT VARCHAR2
) IS
    R_EVENT_ID EVENTS.EVENT_ID%TYPE;
BEGIN
    R_EVENT_ID := EVENT_SEQ.NEXTVAL;
    INSERT INTO
        EVENTS(EVENT_ID, EVENT_TYPE)
    VALUES (R_EVENT_ID, 'reunion');

    INSERT INTO REUNIONS(EVENT_ID, EVENT_NAME, EVENT_DATE, COVER_PHOTO, DESCRIPTION, LATITUDE, LONGITUDE, PLATFORM, FEES, BATCH, DEPARTMENT, GROUP_ID)
    VALUES (R_EVENT_ID, R_EVENT_NAME, TO_DATE(R_EVENT_DATE, 'YYYY-MM-DD'), R_COVER_PHOTO, R_DESCRIPTION, R_LATITUDE, R_LONGITUDE, R_PLATFORM, R_FEES, R_BATCH, R_DEPARTMENT, R_GROUP_ID);
    RESULT := 'Reunion event is added';

EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;



CREATE OR REPLACE PROCEDURE UPDATE_REUNION(
    R_EVENT_ID IN REUNIONS.EVENT_ID%TYPE,
    R_EVENT_NAME IN REUNIONS.EVENT_NAME%TYPE,
    R_EVENT_DATE IN VARCHAR2,
    R_COVER_PHOTO IN REUNIONS.COVER_PHOTO%TYPE,
    R_DESCRIPTION IN  REUNIONS.DESCRIPTION%TYPE,
    R_LATITUDE IN  REUNIONS.LATITUDE%TYPE,
    R_LONGITUDE IN  REUNIONS.LONGITUDE%TYPE,
    R_PLATFORM IN  REUNIONS.PLATFORM%TYPE,
    R_FEES IN  REUNIONS.FEES%TYPE,
    R_BATCH IN  REUNIONS.BATCH%TYPE,
    R_DEPARTMENT IN  REUNIONS.DEPARTMENT%TYPE,
    RESULT OUT VARCHAR2
) IS
BEGIN
    UPDATE REUNIONS
        SET
            EVENT_NAME = R_EVENT_NAME,
            EVENT_DATE = TO_DATE(R_EVENT_DATE, 'YYYY-MM-DD'),
            COVER_PHOTO = R_COVER_PHOTO,
            DESCRIPTION = R_DESCRIPTION,
            LATITUDE = R_LATITUDE,
            LONGITUDE = R_LONGITUDE,
            PLATFORM = R_PLATFORM,
            FEES = R_FEES,
            BATCH = R_BATCH,
            DEPARTMENT = R_DEPARTMENT
    WHERE EVENT_ID = R_EVENT_ID;
    RESULT := 'Update is successful';
EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;
---------------------------------------

        -----SEMINARS-----

----------------------------------------
CREATE OR REPLACE PROCEDURE ADD_SEMINAR(
    S_GROUP_ID IN  SEMINARS.GROUP_ID%TYPE,
    S_EVENT_NAME IN SEMINARS.EVENT_NAME%TYPE,
    S_EVENT_DATE IN VARCHAR2,
    S_COVER_PHOTO IN SEMINARS.COVER_PHOTO%TYPE,
    S_DESCRIPTION IN  SEMINARS.DESCRIPTION%TYPE,
    S_LATITUDE IN  SEMINARS.LATITUDE%TYPE,
    S_LONGITUDE IN  SEMINARS.LONGITUDE%TYPE,
    S_PLATFORM IN  SEMINARS.PLATFORM%TYPE,
    S_FEES IN  SEMINARS.FEES%TYPE,
    S_TOPIC IN  SEMINARS.TOPIC%TYPE,
    S_SPECIAL_GUESTS IN  SEMINARS.SPECIAL_GUESTS%TYPE,
    S_AVAILABLE_FOR IN  SEMINARS.AVAILABLE_FOR%TYPE,
    RESULT OUT VARCHAR2
) IS
    S_EVENT_ID EVENTS.EVENT_ID%TYPE;
BEGIN
    S_EVENT_ID := EVENT_SEQ.NEXTVAL;
    INSERT INTO
        EVENTS(EVENT_ID, EVENT_TYPE)
    VALUES (S_EVENT_ID, 'seminar');

    INSERT INTO SEMINARS(EVENT_ID, EVENT_NAME, EVENT_DATE, COVER_PHOTO, DESCRIPTION, LATITUDE, LONGITUDE, PLATFORM, FEES, TOPIC, SPECIAL_GUESTS, AVAILABLE_FOR, GROUP_ID)
    VALUES (S_EVENT_ID, S_EVENT_NAME, TO_DATE(S_EVENT_DATE, 'YYYY-MM-DD'),S_COVER_PHOTO, S_DESCRIPTION, S_LATITUDE, S_LONGITUDE,
                        S_PLATFORM, S_FEES, S_TOPIC, S_SPECIAL_GUESTS, S_AVAILABLE_FOR, S_GROUP_ID);

    RESULT := 'Seminar event is added';

EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;



CREATE OR REPLACE PROCEDURE UPDATE_SEMINAR(
    S_EVENT_ID IN SEMINARS.EVENT_ID%TYPE,
    S_EVENT_NAME IN SEMINARS.EVENT_NAME%TYPE,
    S_EVENT_DATE IN VARCHAR2,
    S_COVER_PHOTO IN SEMINARS.COVER_PHOTO%TYPE,
    S_DESCRIPTION IN  SEMINARS.DESCRIPTION%TYPE,
    S_LATITUDE IN  SEMINARS.LATITUDE%TYPE,
    S_LONGITUDE IN  SEMINARS.LONGITUDE%TYPE,
    S_PLATFORM IN  SEMINARS.PLATFORM%TYPE,
    S_FEES IN  SEMINARS.FEES%TYPE,
    S_TOPIC IN  SEMINARS.TOPIC%TYPE,
    S_SPECIAL_GUESTS IN  SEMINARS.SPECIAL_GUESTS%TYPE,
    S_AVAILABLE_FOR IN  SEMINARS.AVAILABLE_FOR%TYPE,
    RESULT OUT VARCHAR2
) IS
BEGIN
    UPDATE SEMINARS
        SET
            EVENT_NAME = S_EVENT_NAME,
            EVENT_DATE = TO_DATE(S_EVENT_DATE, 'YYYY-MM-DD'),
            COVER_PHOTO = S_COVER_PHOTO,
            DESCRIPTION = S_DESCRIPTION,
            LATITUDE = S_LATITUDE,
            LONGITUDE = S_LONGITUDE,
            PLATFORM = S_PLATFORM,
            FEES = S_FEES,
            TOPIC = S_TOPIC,
            SPECIAL_GUESTS = S_SPECIAL_GUESTS,
            AVAILABLE_FOR = S_AVAILABLE_FOR
    WHERE EVENT_ID = S_EVENT_ID;

    RESULT := 'Update is successful';
EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;
