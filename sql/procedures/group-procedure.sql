CREATE OR REPLACE PROCEDURE CREATE_GROUP(
    G_GROUP_NAME IN GROUPS.GROUP_NAME%type,
    G_DESCRIPTION IN GROUPS.DESCRIPTION%type,
    G_COVER_PHOTO IN GROUPS.COVER_PHOTO%type,
    G_ADMIN_ID IN GROUPS.ADMIN_ID%type,
    RESULT OUT VARCHAR2
) IS
    G_GROUP_ID GROUPS.GROUP_ID%type;
    GM_GROUP_MEMBER_ID GROUP_MEMBERS.GROUP_MEMBER_ID%type;
BEGIN
    G_GROUP_ID := GROUP_SEQ.NEXTVAL;
    INSERT INTO
        GROUPS(GROUP_ID, GROUP_NAME, DESCRIPTION, COVER_PHOTO, ADMIN_ID)
    VALUES
        (G_GROUP_ID, G_GROUP_NAME, G_DESCRIPTION, G_COVER_PHOTO, G_ADMIN_ID);

    GM_GROUP_MEMBER_ID := GROUP_MEMBER_SEQ.NEXTVAL;
    INSERT INTO
        GROUP_MEMBERS(GROUP_MEMBER_ID, USER_ID, GROUP_ID)
    VALUES
        (GM_GROUP_MEMBER_ID, G_ADMIN_ID, G_GROUP_ID);

    RESULT := 'Group is successfully created';

EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'Please enter the fields correctly';
END;



CREATE OR REPLACE PROCEDURE UPDATE_GROUP(
    G_GROUP_ID IN GROUPS.GROUP_ID%type,
    G_GROUP_NAME IN GROUPS.GROUP_NAME%type,
    G_DESCRIPTION IN GROUPS.DESCRIPTION%type,
    G_COVER_PHOTO IN GROUPS.COVER_PHOTO%type,
    RESULT OUT VARCHAR2
) IS
BEGIN

    UPDATE GROUPS
        SET
            GROUP_NAME = G_GROUP_NAME,
            DESCRIPTION = G_DESCRIPTION,
            COVER_PHOTO = G_COVER_PHOTO
        WHERE GROUP_ID = G_GROUP_ID;

    RESULT := 'Update is successful';

EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'Please enter the fields correctly';
END;



CREATE OR REPLACE PROCEDURE UPDATE_GROUP_ADMIN(
    G_GROUP_ID IN GROUPS.GROUP_ID%type,
    G_ADMIN_ID IN GROUPS.ADMIN_ID%type,
    RESULT OUT VARCHAR2
) IS
    GM_USER_ID GROUP_MEMBERS.USER_ID%type;
BEGIN
    select USER_ID INTO GM_USER_ID from GROUP_MEMBERS
    where GROUP_ID= G_GROUP_ID AND USER_ID=G_ADMIN_ID;

    UPDATE GROUPS
        SET ADMIN_ID = G_ADMIN_ID
        WHERE GROUP_ID = G_GROUP_ID;

    RESULT := 'Update is successful';
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RESULT := 'Admin must be a member of the group';
END;



CREATE OR REPLACE PROCEDURE ADD_PENDING_MEMBER(
    PM_USER_ID IN PENDING_MEMBERS.USER_ID%type,
    PM_GROUP_ID IN PENDING_MEMBERS.GROUP_ID%type,
    RESULT OUT VARCHAR2
) IS
    CNT NUMBER;
BEGIN
    SELECT COUNT(*) INTO CNT FROM GROUP_MEMBERS
    WHERE USER_ID = PM_USER_ID AND GROUP_ID = PM_GROUP_ID;
    IF (CNT = 0) THEN
        INSERT INTO PENDING_MEMBERS(PENDING_MEMBER_ID, USER_ID, GROUP_ID)
        VALUES (PENDING_MEMBER_SEQ.nextval, PM_USER_ID, PM_GROUP_ID);
        RESULT := 'Request successfully added';
    ELSE RESULT := 'Group member already exists';
    end if;
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Pending member already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the fields correctly';
END;


CREATE OR REPLACE PROCEDURE PROCESS_PENDING_MEMBER(
    PM_USER_ID IN PENDING_MEMBERS.USER_ID%type,
    PM_GROUP_ID IN PENDING_MEMBERS.GROUP_ID%type,
    STATUS IN VARCHAR2,
    RESULT OUT VARCHAR2
) IS
    OKAY NUMBER;
BEGIN
    SELECT PENDING_MEMBER_ID INTO OKAY
    FROM PENDING_MEMBERS
    WHERE USER_ID = PM_USER_ID AND GROUP_ID = PM_GROUP_ID;

    DELETE FROM PENDING_MEMBERS
    WHERE USER_ID = PM_USER_ID AND GROUP_ID = PM_GROUP_ID;
    IF STATUS = 'accept' THEN
        INSERT INTO GROUP_MEMBERS(GROUP_MEMBER_ID, USER_ID, GROUP_ID)
        VALUES (GROUP_MEMBER_SEQ.nextval, PM_USER_ID, PM_GROUP_ID);
        RESULT := 'Group Member is successfully accepted';
    ELSIF STATUS = 'reject' THEN
        RESULT := 'Pending request is rejected';
    end if;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RESULT := 'No such pending request exists';
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Group member already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the fields correctly';
END;



CREATE OR REPLACE PROCEDURE DELETE_GROUP_MEMBER(
    GM_USER_ID IN GROUP_MEMBERS.USER_ID%type,
    GM_GROUP_ID IN GROUP_MEMBERS.GROUP_ID%type,
    RESULT OUT VARCHAR2
) IS
    G_ADMIN_ID GROUPS.ADMIN_ID%TYPE;
BEGIN
    SELECT ADMIN_ID INTO G_ADMIN_ID
    FROM GROUPS
    WHERE GROUP_ID = GM_GROUP_ID;

    IF GM_USER_ID = G_ADMIN_ID THEN
        RESULT := 'Cannot delete admin';
    ELSE
        DELETE FROM GROUP_MEMBERS
        WHERE GROUP_ID = GM_GROUP_ID AND USER_ID = GM_USER_ID;

        RESULT := 'Deleted group member';
    end if;

EXCEPTION
    WHEN OTHERS THEN
        RESULT := 'Please enter the fields correctly';
END;


