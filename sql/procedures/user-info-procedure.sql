--------------------------------

        --- SKILLS---

---------------------------------
CREATE OR REPLACE PROCEDURE ADD_SKILL(
    S_SKILL IN SKILLS.SKILL%TYPE,
    S_USER_ID IN SKILLS.USER_ID%TYPE,
    RESULT OUT VARCHAR2
) IS
    S_SKILL_ID SKILLS.SKILL_ID%TYPE;
BEGIN
    S_SKILL_ID := SKILL_SEQ.NEXTVAL;
    INSERT INTO
        SKILLS(SKILL_ID, SKILL, USER_ID)
    VALUES
        (S_SKILL_ID, UPPER(S_SKILL), S_USER_ID);

    RESULT := 'Skill is added';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Skill already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;


CREATE OR REPLACE PROCEDURE UPDATE_SKILL(
    S_SKILL_ID IN SKILLS.SKILL_ID%type,
    S_SKILL IN SKILLS.SKILL%TYPE,
    RESULT OUT VARCHAR2
) IS
BEGIN

    UPDATE SKILLS
        SET
             SKILL = UPPER(S_SKILL)
    WHERE SKILL_ID = S_SKILL_ID;

    RESULT := 'Update is successful';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Skill already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;
--------------------------------

    --- RESEARCH INTERESTS---

---------------------------------
CREATE OR REPLACE PROCEDURE ADD_RESEARCH_INTEREST(
    RI_RESEARCH_INTEREST IN RESEARCH_INTERESTS.RESEARCH_INTEREST%TYPE,
    RI_USER_ID IN RESEARCH_INTERESTS.USER_ID%TYPE,
    RESULT OUT VARCHAR2
) IS
    RI_RESEARCH_INTEREST_ID RESEARCH_INTERESTS.RESEARCH_INTEREST_ID%TYPE;
BEGIN
    RI_RESEARCH_INTEREST_ID := RESEARCH_INTEREST_SEQ.NEXTVAL;
    INSERT INTO
        RESEARCH_INTERESTS(RESEARCH_INTEREST_ID, RESEARCH_INTEREST, USER_ID)
    VALUES
        (RI_RESEARCH_INTEREST_ID, UPPER(RI_RESEARCH_INTEREST), RI_USER_ID);

    RESULT := 'Research Interest is added';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Research Interest already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;


CREATE OR REPLACE PROCEDURE UPDATE_RESEARCH_INTEREST(
    RI_RESEARCH_INTEREST_ID IN RESEARCH_INTERESTS.RESEARCH_INTEREST_ID%TYPE,
    RI_RESEARCH_INTEREST IN RESEARCH_INTERESTS.RESEARCH_INTEREST%TYPE,
    RESULT OUT VARCHAR2
) IS
BEGIN

    UPDATE RESEARCH_INTERESTS
        SET
            RESEARCH_INTEREST = UPPER(RI_RESEARCH_INTEREST)
    WHERE RESEARCH_INTEREST_ID = RI_RESEARCH_INTEREST_ID;

    RESULT := 'Update is successful';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Research Interest already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;
--------------------------------

        --- INTERESTS---

---------------------------------
CREATE OR REPLACE PROCEDURE ADD_INTEREST(
    I_INTEREST IN INTERESTS.INTEREST%TYPE,
    I_USER_ID IN INTERESTS.USER_ID%TYPE,
    RESULT OUT VARCHAR2
) IS
    I_INTEREST_ID INTERESTS.INTEREST_ID%TYPE;
BEGIN
    I_INTEREST_ID := INTEREST_SEQ.NEXTVAL;
    INSERT INTO
        INTERESTS(INTEREST_ID, INTEREST, USER_ID)
    VALUES
        (I_INTEREST_ID, UPPER(I_INTEREST), I_USER_ID);

    RESULT := 'Interest is added';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Interest already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;


CREATE OR REPLACE PROCEDURE UPDATE_INTEREST(
    I_INTEREST_ID IN INTERESTS.INTEREST_ID%TYPE,
    I_INTEREST IN INTERESTS.INTEREST%TYPE,
    RESULT OUT VARCHAR2
) IS
BEGIN

    UPDATE INTERESTS
        SET
            INTEREST = UPPER(I_INTEREST)
    WHERE INTEREST_ID = I_INTEREST_ID;

    RESULT := 'Update is successful';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Interest already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;
--------------------------------

        --- EDUCATION---

---------------------------------
CREATE OR REPLACE PROCEDURE ADD_EDUCATION(
    E_USER_ID IN EDUCATION.USER_ID%TYPE,
    E_INSTITUTE IN EDUCATION.INSTITUTE%TYPE,
    E_FIELD_OF_STUDY IN EDUCATION.FIELD_OF_STUDY%TYPE,
    E_DEGREE IN EDUCATION.DEGREE%TYPE,
    E_GRADE IN EDUCATION.GRADE%TYPE,
    E_START_DATE IN VARCHAR2,
    E_END_DATE IN VARCHAR2,
    RESULT OUT VARCHAR2
) IS
    E_EDUCATION_ID EDUCATION.EDUCATION_ID%TYPE;
BEGIN
    E_EDUCATION_ID := EDUCATION_SEQ.NEXTVAL;
    INSERT INTO
        EDUCATION(EDUCATION_ID, USER_ID, INSTITUTE, FIELD_OF_STUDY, DEGREE, GRADE, START_DATE, END_DATE)
    VALUES
        (E_EDUCATION_ID, E_USER_ID, UPPER(E_INSTITUTE), UPPER(E_FIELD_OF_STUDY), UPPER(E_DEGREE), UPPER(E_GRADE), TO_DATE(E_START_DATE, 'YYYY-MM-DD'), TO_DATE(E_END_DATE, 'YYYY-MM-DD'));

    RESULT := 'Education info is added';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Education info already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;


CREATE OR REPLACE PROCEDURE UPDATE_EDUCATION(
    E_EDUCATION_ID IN EDUCATION.EDUCATION_ID%TYPE,
    E_INSTITUTE IN EDUCATION.INSTITUTE%TYPE,
    E_FIELD_OF_STUDY IN EDUCATION.FIELD_OF_STUDY%TYPE,
    E_DEGREE IN EDUCATION.DEGREE%TYPE,
    E_GRADE IN EDUCATION.GRADE%TYPE,
    E_START_DATE IN VARCHAR2,
    E_END_DATE IN VARCHAR2,
    RESULT OUT VARCHAR2
) IS
BEGIN

    UPDATE education
        SET
            institute = UPPER(E_INSTITUTE),
            field_of_study = UPPER(E_FIELD_OF_STUDY),
            degree = UPPER(E_DEGREE),
            grade = UPPER(E_GRADE),
            start_date = TO_DATE(E_START_DATE, 'YYYY-MM-DD'),
            end_date = TO_DATE(E_END_DATE, 'YYYY-MM-DD')
    WHERE
        education_id = E_EDUCATION_ID;

    RESULT := 'Update is successful';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Education info already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;
--------------------------------

        --- WORK EXPERIENCE---

---------------------------------
CREATE OR REPLACE PROCEDURE ADD_WORK_EXPERIENCE(
    WE_USER_ID IN WORK_EXPERIENCE.USER_ID%TYPE,
    WE_ORGANIZATION IN WORK_EXPERIENCE.ORGANIZATION%TYPE,
    WE_EMPLOYMENT_TYPE IN WORK_EXPERIENCE.EMPLOYMENT_TYPE%TYPE,
    WE_DESIGNATION IN WORK_EXPERIENCE.DESIGNATION%TYPE,
    WE_START_DATE IN VARCHAR2,
    WE_END_DATE IN VARCHAR2,
    RESULT OUT VARCHAR2
) IS
    WE_WORK_EXPERIENCE_ID WORK_EXPERIENCE.WORK_EXPERIENCE_ID%TYPE;
BEGIN
    WE_WORK_EXPERIENCE_ID := WORK_EXPERIENCE_SEQ.NEXTVAL;
    INSERT INTO
        WORK_EXPERIENCE(WORK_EXPERIENCE_ID, USER_ID, ORGANIZATION, EMPLOYMENT_TYPE, DESIGNATION, START_DATE, END_DATE)
    VALUES
        (WE_WORK_EXPERIENCE_ID, WE_USER_ID, UPPER(WE_ORGANIZATION), WE_EMPLOYMENT_TYPE, UPPER(WE_DESIGNATION),  TO_DATE(WE_START_DATE, 'YYYY-MM-DD'), TO_DATE(WE_END_DATE, 'YYYY-MM-DD'));

    RESULT := 'Work experience is added';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Work experience already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;


CREATE OR REPLACE PROCEDURE UPDATE_WORK_EXPERIENCE(
    WE_WORK_EXPERIENCE_ID IN WORK_EXPERIENCE.WORK_EXPERIENCE_ID%TYPE,
    WE_ORGANIZATION IN WORK_EXPERIENCE.ORGANIZATION%TYPE,
    WE_EMPLOYMENT_TYPE IN WORK_EXPERIENCE.EMPLOYMENT_TYPE%TYPE,
    WE_DESIGNATION IN WORK_EXPERIENCE.DESIGNATION%TYPE,
    WE_START_DATE IN VARCHAR2,
    WE_END_DATE IN VARCHAR2,
    RESULT OUT VARCHAR2
) IS
BEGIN
    UPDATE work_experience
        SET
            organization = UPPER(WE_ORGANIZATION),
            employment_type = WE_EMPLOYMENT_TYPE,
            designation = UPPER(WE_DESIGNATION),
            start_date = TO_DATE(WE_START_DATE, 'YYYY-MM-DD'),
            end_date = TO_DATE(WE_END_DATE, 'YYYY-MM-DD')
    WHERE
        work_experience_id = WE_WORK_EXPERIENCE_ID;

    RESULT := 'Update is successful';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Work experience already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;
--------------------------------

        ---ACHIEVEMENTS---

---------------------------------
CREATE OR REPLACE PROCEDURE ADD_ACHIEVEMENT(
    A_USER_ID IN ACHIEVEMENTS.USER_ID%TYPE,
    A_ACHIEVEMENT_NAME IN ACHIEVEMENTS.ACHIEVEMENT_NAME%TYPE,
    A_ACHIEVEMENT_DATE IN VARCHAR2,
    A_POSITION IN ACHIEVEMENTS.POSITION%TYPE,
    A_ORGANIZED_BY IN ACHIEVEMENTS.ORGANIZED_BY%TYPE,
    RESULT OUT VARCHAR2
) IS
    A_ACHIEVEMENT_ID ACHIEVEMENTS.ACHIEVEMENT_ID%TYPE;
BEGIN
    A_ACHIEVEMENT_ID := ACHIEVEMENT_SEQ.NEXTVAL;
    INSERT INTO
        ACHIEVEMENTS(ACHIEVEMENT_ID, USER_ID, ACHIEVEMENT_NAME, ACHIEVEMENT_DATE, POSITION, ORGANIZED_BY)
    VALUES
        (A_ACHIEVEMENT_ID, A_USER_ID, UPPER(A_ACHIEVEMENT_NAME), TO_DATE(A_ACHIEVEMENT_DATE, 'YYYY-MM-DD'), UPPER(A_POSITION), UPPER(A_ORGANIZED_BY));

    RESULT := 'Achievement is added';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Achievement already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;


CREATE OR REPLACE PROCEDURE UPDATE_ACHIEVEMENT(
    A_ACHIEVEMENT_ID IN ACHIEVEMENTS.ACHIEVEMENT_ID%TYPE,
    A_ACHIEVEMENT_NAME IN ACHIEVEMENTS.ACHIEVEMENT_NAME%TYPE,
    A_ACHIEVEMENT_DATE IN VARCHAR2,
    A_POSITION IN ACHIEVEMENTS.POSITION%TYPE,
    A_ORGANIZED_BY IN ACHIEVEMENTS.ORGANIZED_BY%TYPE,
    RESULT OUT VARCHAR2
) IS
BEGIN
    UPDATE achievements
        SET
            achievement_name = UPPER(A_ACHIEVEMENT_NAME),
            achievement_date = TO_DATE(A_ACHIEVEMENT_DATE, 'YYYY-MM-DD'),
            position = UPPER(A_POSITION),
            organized_by = UPPER(A_ORGANIZED_BY)
    WHERE
        achievement_id = A_ACHIEVEMENT_ID;
    RESULT := 'Update is successful';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Achievement already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;
--------------------------------

        ---PUBLICATIONS---

---------------------------------
CREATE OR REPLACE PROCEDURE ADD_PUBLICATION(
    P_USER_ID IN PUBLICATIONS.USER_ID%TYPE,
    P_TITLE IN PUBLICATIONS.TITLE%TYPE,
    P_AUTHORS IN PUBLICATIONS.AUTHORS%TYPE,
    P_JOURNAL IN PUBLICATIONS.JOURNAL%TYPE,
    P_PUBLICATION_DATE IN VARCHAR2,
    P_PDF_LINK IN PUBLICATIONS.PDF_LINK%TYPE,
    RESULT OUT VARCHAR2
) IS
    P_PUBLICATION_ID PUBLICATIONS.PUBLICATION_ID%TYPE;
BEGIN
    P_PUBLICATION_ID := PUBLICATION_SEQ.NEXTVAL;
    INSERT INTO
        PUBLICATIONS(PUBLICATION_ID, USER_ID, TITLE, AUTHORS, JOURNAL, PUBLICATION_DATE, PDF_LINK)
    VALUES
        (P_PUBLICATION_ID, P_USER_ID, UPPER(P_TITLE), UPPER(P_AUTHORS), UPPER(P_JOURNAL), TO_DATE(P_PUBLICATION_DATE, 'YYYY-MM-DD'), P_PDF_LINK);

    RESULT := 'Publication info is added';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Publication info already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;


CREATE OR REPLACE PROCEDURE UPDATE_PUBLICATION(
    P_PUBLICATION_ID IN PUBLICATIONS.PUBLICATION_ID%TYPE,
    P_TITLE IN PUBLICATIONS.TITLE%TYPE,
    P_AUTHORS IN PUBLICATIONS.AUTHORS%TYPE,
    P_JOURNAL IN PUBLICATIONS.JOURNAL%TYPE,
    P_PUBLICATION_DATE IN VARCHAR2,
    P_PDF_LINK IN PUBLICATIONS.PDF_LINK%TYPE,
    RESULT OUT VARCHAR2
) IS
BEGIN
    UPDATE publications
        SET
            title = UPPER(P_TITLE),
            authors = UPPER(P_AUTHORS),
            journal = UPPER(P_JOURNAL),
            publication_date = TO_DATE(P_PUBLICATION_DATE, 'YYYY-MM-DD'),
            pdf_link = P_PDF_LINK
    WHERE
        publication_id = P_PUBLICATION_ID;
    RESULT := 'Update is successful';

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        RESULT := 'Publication info already exists';
    WHEN OTHERS THEN
        RESULT := 'Please fill up the field correctly';
END;
